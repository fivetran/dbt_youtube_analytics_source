{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2023-12-04T19:57:53.391360Z", "invocation_id": "2b7dd211-b63e-4892-996c-c97952aa1475", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.973145Z", "completed_at": "2023-12-04T19:57:52.974167Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:52.976111Z", "completed_at": "2023-12-04T19:57:52.976121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016057968139648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.youtube_analytics_source_integration_tests.youtube_channel_basic_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.961831Z", "completed_at": "2023-12-04T19:57:52.974551Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:52.976815Z", "completed_at": "2023-12-04T19:57:52.976819Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019176959991455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.youtube_analytics_source.stg_youtube__channel_basic_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1\".\"youtube_channel_basic_data\"", "relation_name": "\"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_basic_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.970019Z", "completed_at": "2023-12-04T19:57:52.975287Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:52.977632Z", "completed_at": "2023-12-04T19:57:52.977635Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018297195434570312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.youtube_analytics_source.stg_youtube__video_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1\".\"youtube_video_data\"", "relation_name": "\"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__video_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.967588Z", "completed_at": "2023-12-04T19:57:52.975570Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:52.977884Z", "completed_at": "2023-12-04T19:57:52.977887Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019378185272216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.youtube_analytics_source.stg_youtube__channel_demographics_tmp", "compiled": true, "compiled_code": "\n\nselect *\nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1\".\"youtube_channel_demographics_data\"", "relation_name": "\"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_demographics_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.982964Z", "completed_at": "2023-12-04T19:57:52.984177Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:52.996361Z", "completed_at": "2023-12-04T19:57:52.996367Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01718878746032715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.youtube_analytics_source_integration_tests.youtube_channel_demographics_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.985039Z", "completed_at": "2023-12-04T19:57:52.985927Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:52.997071Z", "completed_at": "2023-12-04T19:57:52.997074Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017209291458129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.youtube_analytics_source_integration_tests.youtube_video_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.999961Z", "completed_at": "2023-12-04T19:57:53.301550Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.302095Z", "completed_at": "2023-12-04T19:57:53.302102Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.34427499771118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.youtube_analytics_source.stg_youtube__channel_demographics", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_demographics_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    age_group\n    \n as \n    \n    age_group\n    \n, \n    \n    \n    channel_id\n    \n as \n    \n    channel_id\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    gender\n    \n as \n    \n    gender\n    \n, \n    \n    \n    live_or_on_demand\n    \n as \n    \n    live_or_on_demand\n    \n, \n    \n    \n    subscribed_status\n    \n as \n    \n    subscribed_status\n    \n, \n    \n    \n    video_id\n    \n as \n    \n    video_id\n    \n, \n    \n    \n    views_percentage\n    \n as \n    \n    views_percentage\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        date as date_day,\n        video_id,\n        channel_id,\n        age_group,\n        country_code,\n        gender,\n        live_or_on_demand,\n        subscribed_status,\n        views_percentage / 100.0 as views_percentage,\n        _fivetran_synced\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_demographics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:53.353776Z", "completed_at": "2023-12-04T19:57:53.358059Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.359110Z", "completed_at": "2023-12-04T19:57:53.359115Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01404881477355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.youtube_analytics_source.unique_stg_youtube__channel_demographics__fivetran_id.8a3f8407b2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_demographics\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:53.346811Z", "completed_at": "2023-12-04T19:57:53.358338Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.359377Z", "completed_at": "2023-12-04T19:57:53.359380Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015188932418823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.youtube_analytics_source.not_null_stg_youtube__channel_demographics__fivetran_id.403e193838", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_demographics\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.991916Z", "completed_at": "2023-12-04T19:57:53.342364Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.342915Z", "completed_at": "2023-12-04T19:57:53.342923Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3866691589355469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.youtube_analytics_source.stg_youtube__video", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__video_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    content_details_caption\n    \n as \n    \n    content_details_caption\n    \n, \n    \n    \n    content_details_definition\n    \n as \n    \n    content_details_definition\n    \n, \n    \n    \n    content_details_dimension\n    \n as \n    \n    content_details_dimension\n    \n, \n    \n    \n    content_details_duration\n    \n as \n    \n    content_details_duration\n    \n, \n    \n    \n    content_details_has_custom_thumbnail\n    \n as \n    \n    content_details_has_custom_thumbnail\n    \n, \n    \n    \n    content_details_licensed_content\n    \n as \n    \n    content_details_licensed_content\n    \n, \n    \n    \n    content_details_projection\n    \n as \n    \n    content_details_projection\n    \n, \n    \n    \n    content_details_region_restriction\n    \n as \n    \n    content_details_region_restriction\n    \n, \n    \n    \n    etag\n    \n as \n    \n    etag\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    kind\n    \n as \n    \n    kind\n    \n, \n    \n    \n    player_embed_height\n    \n as \n    \n    player_embed_height\n    \n, \n    \n    \n    player_embed_html\n    \n as \n    \n    player_embed_html\n    \n, \n    \n    \n    player_embed_width\n    \n as \n    \n    player_embed_width\n    \n, \n    \n    \n    privacy_status\n    \n as \n    \n    privacy_status\n    \n, \n    \n    \n    snippet_category_id\n    \n as \n    \n    snippet_category_id\n    \n, \n    \n    \n    snippet_channel_id\n    \n as \n    \n    snippet_channel_id\n    \n, \n    \n    \n    snippet_channel_title\n    \n as \n    \n    snippet_channel_title\n    \n, \n    \n    \n    snippet_default_audio_language\n    \n as \n    \n    snippet_default_audio_language\n    \n, \n    \n    \n    snippet_default_language\n    \n as \n    \n    snippet_default_language\n    \n, \n    \n    \n    snippet_description\n    \n as \n    \n    snippet_description\n    \n, \n    \n    \n    snippet_live_broadcast_content\n    \n as \n    \n    snippet_live_broadcast_content\n    \n, \n    \n    \n    snippet_localized\n    \n as \n    \n    snippet_localized\n    \n, \n    \n    \n    snippet_published_at\n    \n as \n    \n    snippet_published_at\n    \n, \n    \n    \n    snippet_tags\n    \n as \n    \n    snippet_tags\n    \n, \n    \n    \n    snippet_thumbnails\n    \n as \n    \n    snippet_thumbnails\n    \n, \n    \n    \n    snippet_title\n    \n as \n    \n    snippet_title\n    \n, \n    \n    \n    statistics_comment_count\n    \n as \n    \n    statistics_comment_count\n    \n, \n    \n    \n    statistics_dislike_count\n    \n as \n    \n    statistics_dislike_count\n    \n, \n    \n    \n    statistics_favorite_count\n    \n as \n    \n    statistics_favorite_count\n    \n, \n    \n    \n    statistics_like_count\n    \n as \n    \n    statistics_like_count\n    \n, \n    \n    \n    statistics_view_count\n    \n as \n    \n    statistics_view_count\n    \n, \n    \n    \n    status_embeddable\n    \n as \n    \n    status_embeddable\n    \n, \n    \n    \n    status_failure_reason\n    \n as \n    \n    status_failure_reason\n    \n, \n    \n    \n    status_license\n    \n as \n    \n    status_license\n    \n, \n    \n    \n    status_made_for_kids\n    \n as \n    \n    status_made_for_kids\n    \n, \n    \n    \n    status_public_stats_viewable\n    \n as \n    \n    status_public_stats_viewable\n    \n, \n    \n    \n    status_publish_at\n    \n as \n    \n    status_publish_at\n    \n, \n    \n    \n    status_rejection_reason\n    \n as \n    \n    status_rejection_reason\n    \n, \n    \n    \n    status_self_declared_made_for_kids\n    \n as \n    \n    status_self_declared_made_for_kids\n    \n, \n    \n    \n    upload_status\n    \n as \n    \n    upload_status\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as video_id,\n        snippet_title as video_title,\n        snippet_description as video_description,\n        snippet_published_at as video_published_at,\n        snippet_channel_title as channel_title,\n        snippet_thumbnails as video_thumbnails,\n        snippet_category_id as video_category_id,\n        snippet_channel_id as channel_id,\n        snippet_default_audio_language as video_default_audio_language,\n        snippet_default_language as video_default_language,\n        snippet_live_broadcast_content as video_live_broadcast_content,\n        snippet_localized as video_localized,\n        snippet_tags as video_tags,\n        content_details_caption,\n        content_details_definition,\n        content_details_dimension,\n        content_details_duration,\n        content_details_has_custom_thumbnail,\n        content_details_licensed_content,\n        content_details_projection,\n        content_details_region_restriction,\n        etag,\n        kind,\n        player_embed_height,\n        player_embed_html,\n        player_embed_width,\n        privacy_status,\n        statistics_comment_count,\n        statistics_dislike_count,\n        statistics_favorite_count,\n        statistics_like_count,\n        statistics_view_count,\n        status_embeddable,\n        status_failure_reason,\n        status_license,\n        status_made_for_kids,\n        status_public_stats_viewable,\n        status_publish_at,\n        status_rejection_reason,\n        status_self_declared_made_for_kids,\n        upload_status,\n        _fivetran_synced\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__video\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:53.370244Z", "completed_at": "2023-12-04T19:57:53.376520Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.377047Z", "completed_at": "2023-12-04T19:57:53.377051Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007820844650268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.youtube_analytics_source.not_null_stg_youtube__video_video_id.67eb17d62f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect video_id\nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__video\"\nwhere video_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:53.373882Z", "completed_at": "2023-12-04T19:57:53.377853Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.378340Z", "completed_at": "2023-12-04T19:57:53.378343Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005464076995849609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.youtube_analytics_source.unique_stg_youtube__video_video_id.bc68114250", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    video_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__video\"\nwhere video_id is not null\ngroup by video_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:52.986445Z", "completed_at": "2023-12-04T19:57:53.344058Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.345512Z", "completed_at": "2023-12-04T19:57:53.345517Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.39797019958496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.youtube_analytics_source.stg_youtube__channel_basic", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_basic_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    annotation_click_through_rate\n    \n as \n    \n    annotation_click_through_rate\n    \n, \n    \n    \n    annotation_clickable_impressions\n    \n as \n    \n    annotation_clickable_impressions\n    \n, \n    \n    \n    annotation_clicks\n    \n as \n    \n    annotation_clicks\n    \n, \n    \n    \n    annotation_closable_impressions\n    \n as \n    \n    annotation_closable_impressions\n    \n, \n    \n    \n    annotation_close_rate\n    \n as \n    \n    annotation_close_rate\n    \n, \n    \n    \n    annotation_closes\n    \n as \n    \n    annotation_closes\n    \n, \n    \n    \n    annotation_impressions\n    \n as \n    \n    annotation_impressions\n    \n, \n    \n    \n    average_view_duration_percentage\n    \n as \n    \n    average_view_duration_percentage\n    \n, \n    \n    \n    average_view_duration_seconds\n    \n as \n    \n    average_view_duration_seconds\n    \n, \n    \n    \n    card_click_rate\n    \n as \n    \n    card_click_rate\n    \n, \n    \n    \n    card_clicks\n    \n as \n    \n    card_clicks\n    \n, \n    \n    \n    card_impressions\n    \n as \n    \n    card_impressions\n    \n, \n    \n    \n    card_teaser_click_rate\n    \n as \n    \n    card_teaser_click_rate\n    \n, \n    \n    \n    card_teaser_clicks\n    \n as \n    \n    card_teaser_clicks\n    \n, \n    \n    \n    card_teaser_impressions\n    \n as \n    \n    card_teaser_impressions\n    \n, \n    \n    \n    channel_id\n    \n as \n    \n    channel_id\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    country_code\n    \n as \n    \n    country_code\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    dislikes\n    \n as \n    \n    dislikes\n    \n, \n    \n    \n    likes\n    \n as \n    \n    likes\n    \n, \n    \n    \n    live_or_on_demand\n    \n as \n    \n    live_or_on_demand\n    \n, \n    \n    \n    red_views\n    \n as \n    \n    red_views\n    \n, \n    \n    \n    red_watch_time_minutes\n    \n as \n    \n    red_watch_time_minutes\n    \n, \n    \n    \n    shares\n    \n as \n    \n    shares\n    \n, \n    \n    \n    subscribed_status\n    \n as \n    \n    subscribed_status\n    \n, \n    \n    \n    subscribers_gained\n    \n as \n    \n    subscribers_gained\n    \n, \n    \n    \n    subscribers_lost\n    \n as \n    \n    subscribers_lost\n    \n, \n    \n    \n    video_id\n    \n as \n    \n    video_id\n    \n, \n    \n    \n    videos_added_to_playlists\n    \n as \n    \n    videos_added_to_playlists\n    \n, \n    \n    \n    videos_removed_from_playlists\n    \n as \n    \n    videos_removed_from_playlists\n    \n, \n    \n    \n    views\n    \n as \n    \n    views\n    \n, \n    \n    \n    watch_time_minutes\n    \n as \n    \n    watch_time_minutes\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id, \n        date as date_day, \n        _fivetran_synced, \n        average_view_duration_percentage / 100.0 as average_view_duration_percentage, \n        average_view_duration_seconds, \n        channel_id, \n        comments, \n        dislikes, \n        likes, \n        shares, \n        subscribers_gained, \n        subscribers_lost, \n        video_id, \n        views, \n        watch_time_minutes\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_basic\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:53.384921Z", "completed_at": "2023-12-04T19:57:53.387551Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.388056Z", "completed_at": "2023-12-04T19:57:53.388060Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007207155227661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.youtube_analytics_source.unique_stg_youtube__channel_basic__fivetran_id.2ee35ab57d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_basic\"\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-04T19:57:53.382074Z", "completed_at": "2023-12-04T19:57:53.388810Z"}, {"name": "execute", "started_at": "2023-12-04T19:57:53.389296Z", "completed_at": "2023-12-04T19:57:53.389299Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008814811706542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.youtube_analytics_source.not_null_stg_youtube__channel_basic__fivetran_id.3946ed0006", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"youtube_analytics_source_integrations_tests_1_youtube_source\".\"stg_youtube__channel_basic\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}], "elapsed_time": 1.3837411403656006, "args": {"static_parser": true, "log_file_max_bytes": 10485760, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "printer_width": 80, "log_format_file": "debug", "invocation_command": "dbt docs generate -t postgres", "cache_selected_only": false, "log_level": "info", "use_colors": true, "defer": false, "introspect": true, "macro_debugging": false, "target": "postgres", "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/youtube_analytics/dbt_youtube_analytics_source/integration_tests/logs", "exclude": [], "enable_legacy_logger": false, "quiet": false, "use_colors_file": true, "select": [], "send_anonymous_usage_stats": true, "strict_mode": false, "which": "generate", "partial_parse_file_diff": true, "populate_cache": true, "log_format": "default", "write_json": true, "static": false, "show_resource_report": false, "warn_error_options": {"include": [], "exclude": []}, "compile": true, "partial_parse": true, "print": true, "version_check": true, "indirect_selection": "eager", "log_level_file": "debug", "empty_catalog": false, "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/youtube_analytics/dbt_youtube_analytics_source/integration_tests", "vars": {}, "favor_state": false}}